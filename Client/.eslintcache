[{"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\index.js":"1","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\App.js":"2","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Navbar\\Navbar.js":"3","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\reducers\\userDetailsReducer.js":"4","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Routing.js":"5","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Checkout\\Payment.js":"6","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Menu\\Menu.js":"7","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Profile\\Profile.js":"8","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Success\\SuccessPage.js":"9","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Login\\SignIn.js":"10","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Registration\\RegForm.js":"11","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\FoodCards\\FoodCards.js":"12","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Registration\\PreviewForm.js":"13","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\FoodCards\\FoodItems.js":"14"},{"size":228,"mtime":1611390443502,"results":"15","hashOfConfig":"16"},{"size":1374,"mtime":1611399896773,"results":"17","hashOfConfig":"16"},{"size":1449,"mtime":1611399896802,"results":"18","hashOfConfig":"16"},{"size":610,"mtime":1611390443506,"results":"19","hashOfConfig":"16"},{"size":1835,"mtime":1611427113558,"results":"20","hashOfConfig":"16"},{"size":1884,"mtime":1611425921637,"results":"21","hashOfConfig":"16"},{"size":5953,"mtime":1611427243870,"results":"22","hashOfConfig":"16"},{"size":1425,"mtime":1611427001851,"results":"23","hashOfConfig":"16"},{"size":1223,"mtime":1611399896810,"results":"24","hashOfConfig":"16"},{"size":5193,"mtime":1611399896775,"results":"25","hashOfConfig":"16"},{"size":19031,"mtime":1611426521764,"results":"26","hashOfConfig":"16"},{"size":963,"mtime":1611399896785,"results":"27","hashOfConfig":"16"},{"size":1105,"mtime":1611426533089,"results":"28","hashOfConfig":"16"},{"size":1411,"mtime":1611399896786,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1agyc2g",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\index.js",[],["62","63"],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\App.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\reducers\\userDetailsReducer.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Routing.js",["64","65"],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Checkout\\Payment.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Menu\\Menu.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Success\\SuccessPage.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Login\\SignIn.js",["66","67"],"import {useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserDetailsContext} from \"../../../App\"\r\nimport { toast } from 'react-toastify';\r\nimport \"./Signin.css\"\r\n//import 'react-toastify/dist/ReactToastify.css'\r\ntoast.configure();\r\n\r\nfunction SignIn(){\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [load,setLoad] = useState(\"\");\r\n    const [rem,setRem] = useState(localStorage.getItem(\"rememberMe\") === null?false:JSON.parse(localStorage.getItem(\"rememberMe\")).bool);\r\n    const history = useHistory();\r\n    //destructure the state and dispatch function from context provider's value\r\n    const {state,dispatch} = useContext(UserDetailsContext);\r\n\r\n    function onChangeHandler(event) {\r\n        if(event.target.name === \"username\"){\r\n            setUsername(event.target.value);\r\n        }else if(event.target.name === 'password'){\r\n            setPassword(event.target.value);\r\n        }\r\n    }\r\n\r\n    //func to remeber me\r\n    function rememebrMeFunc(e){\r\n        setRem(e.target.checked);\r\n        console.log(e.target.checked);\r\n        localStorage.setItem(\"rememberMe\",JSON.stringify({bool:e.target.checked}))\r\n    }\r\n\r\n    function onClickHandler(event){\r\n        //prevent default action of reloading\r\n        event.preventDefault()\r\n        //debugger;\r\n        //make a post request to server sign in\r\n        /*const reqOptions = { \r\n            headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'}, \r\n            credentials: 'include',\r\n            method: 'POST', \r\n            body: JSON.stringify({\r\n            username,\r\n            password,\r\n            rememberMe : rem\r\n        })\r\n    }*/\r\n        const reqOptions = {\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        };\r\n        console.log(\"Trying to fetch...\")\r\n        //debugger;\r\n        fetch(\"/login\",reqOptions).then(res=>{return res.json()}).then((data)=>{\r\n            console.log(\"Made fetch req and recieved res\")\r\n            //debugger;\r\n            //loading\r\n            setLoad(<div className=\"progress\">\r\n                        <div className=\"indeterminate\"></div>\r\n                    </div>)\r\n            console.log(data);\r\n            if(data.success){\r\n                //make a toast with success massage\r\n                toast.success(data.message);\r\n\r\n                //store token and user info present in response in local storage\r\n                localStorage.setItem(\"jwt\",data.token);\r\n                console.log(data.user);\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user));\r\n                console.log(\"Successfull login.....\")\r\n\r\n                //only dispatch is allowed to change state by dispatching action\r\n                //store user data in redux state\r\n                dispatch({type:\"SET_USER_DETAILS\",payload:data.user})\r\n                \r\n                //navigate user to menu\r\n                setTimeout(()=>{\r\n                    history.push('/menu');\r\n                },1000)\r\n            }else{\r\n                setLoad(null);\r\n                //make toast with failure message\r\n                toast.error(data.message);\r\n                console.log(data.error + \" : \" + data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container-login\">\r\n            {load}\r\n            <div className=\"loginWrapper\">\r\n                <div className='form-content-left'>\r\n                    <img className='form-img' src='/cafeLogo.jpg'/>\r\n                </div>\r\n                <div className=\"form-content-right\">\r\n                    <form>\r\n                        <h1 className=\"login\">Login</h1>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"text\" value ={username} onChange={(event)=>{onChangeHandler(event)}} name=\"username\" placeholder=\"Employee ID\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"password\" value={password} onChange={(event)=>{onChangeHandler(event)}} name=\"password\" placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"submit\" onClick={(event)=>onClickHandler(event)}>SignIn</button>\r\n                        </div>\r\n                        <br/>\r\n                        \r\n                        <span className=\"remember\">Remember Me</span> <br/>\r\n                        <input className=\"flipswitch\" type=\"checkbox\" checked={rem} onChange={(e)=>rememebrMeFunc(e)}/>\r\n                        <br/> <br/>\r\n                        <Link className=\"already\" to=\"/signup\">Dont have an account?</Link>\r\n                       \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default SignIn;\r\n\r\n\r\n/*\r\n,'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}`\r\n*/\r\n\r\n/*\r\n1610385286469\r\n1235\r\n*/","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Registration\\RegForm.js",["68","69","70","71","72","73","74","75"],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\FoodCards\\FoodCards.js",["76"],"import React, {useContext} from 'react';\r\nimport './FoodCards.css';\r\nimport FoodItem from './FoodItems';\r\n\r\n\r\nfunction FoodCards(props) {\r\n  const map = props.menu.items.map((item,id)=>{\r\n                return [\r\n                    <FoodItem\r\n                      key = {id}\r\n                      src='/food.jpg'\r\n                      text={item.name}\r\n                      description = {item.description}\r\n                      label='Not spicy'\r\n                      addItem={props.addItem}\r\n                      removeItem={props.removeItem}\r\n                      price={item.price}\r\n                      count={item.quantity}\r\n                      category={props.menu.category}\r\n                    />\r\n                ]\r\n          });\r\n  return (\r\n    <div className='foodMenu'>      \r\n      <h3 className=\"menu-category\">{props.menu.category}</h3>\r\n      <ul className='foodContainer'>{map}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FoodCards;","C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\Auth\\Registration\\PreviewForm.js",[],"C:\\Users\\dynam\\Desktop\\Hackerrank Hackathon\\Testing_for_errors\\Full-Stack-Hackathon-HackerRank\\Client\\src\\components\\FoodCards\\FoodItems.js",["77"],"import React from 'react';\r\n\r\nfunction FoodItem(props) {\r\n  return (\r\n    \r\n      <li className='foodItem'>\r\n        <div className='foodItemContainer'>\r\n          <figure className='games__item__pic-wrap' price={\"₹\"+props.price}>\r\n            <img\r\n              className='food-item-img'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='food-item-info'>\r\n            <h5 className='food-item-name'>{props.text}</h5>\r\n            <div className=\"count-container\">\r\n              {props.count > 0? <>\r\n                  <button className=\"count neg\" onClick={(event) => {\r\n                    event.preventDefault();\r\n                    props.removeItem(props);\r\n                    }}>-</button>\r\n                  <input className=\"count-val\" type=\"text\" value={props.count}/>\r\n                  <button className=\"count pos\" onClick={(event) => {\r\n                    event.preventDefault();\r\n                    props.addItem(props);\r\n                    }}>+</button></>\r\n              :\r\n              <button className=\"add-cart\" onClick={(event) => {\r\n                event.preventDefault();\r\n                props.addItem(props);\r\n                }}>Add To Cart</button>\r\n              }\r\n              \r\n            </div>\r\n            <p>{props.description}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    \r\n  );\r\n}\r\n\r\nexport default FoodItem;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":14,"column":12,"nodeType":"84","messageId":"85","endLine":14,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":38,"column":8,"nodeType":"88","endLine":38,"endColumn":10,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"83","line":16,"column":12,"nodeType":"84","messageId":"85","endLine":16,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":98,"column":21,"nodeType":"92","endLine":98,"endColumn":68},{"ruleId":"82","severity":1,"message":"93","line":1,"column":29,"nodeType":"84","messageId":"85","endLine":1,"endColumn":39},{"ruleId":"82","severity":1,"message":"94","line":34,"column":12,"nodeType":"84","messageId":"85","endLine":34,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":42,"column":12,"nodeType":"84","messageId":"85","endLine":42,"endColumn":17},{"ruleId":"86","severity":1,"message":"95","line":156,"column":7,"nodeType":"88","endLine":156,"endColumn":13,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":408,"column":80,"nodeType":"99","endLine":408,"endColumn":95},{"ruleId":"97","severity":1,"message":"98","line":411,"column":80,"nodeType":"99","endLine":411,"endColumn":95},{"ruleId":"97","severity":1,"message":"98","line":415,"column":52,"nodeType":"99","endLine":415,"endColumn":70},{"ruleId":"97","severity":1,"message":"98","line":417,"column":64,"nodeType":"99","endLine":417,"endColumn":82},{"ruleId":"82","severity":1,"message":"100","line":1,"column":16,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":9,"column":13,"nodeType":"92","endLine":12,"endColumn":15},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useReducer' is defined but never used.","'errMsgs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cloudinaryUploadPromise', 'dispatch', 'email', 'empID', 'formErrors', 'history', 'mobNo', 'name', 'orgName', 'password', and 'valid'. Either include them or remove the dependency array.",["104"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch, history]",{"range":"109","text":"110"},"Update the dependencies array to be: [cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]",{"range":"111","text":"112"},[1366,1368],"[dispatch, history]",[7474,7480],"[cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]"]