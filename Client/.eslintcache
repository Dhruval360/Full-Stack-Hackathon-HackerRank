[{"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/index.js":"1","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/App.js":"2","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Routing.js":"3","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Navbar.js":"4","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/reducers/userDetailsReducer.js":"5","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/SuccessPage.js":"6","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/SignIn.js":"7","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Profile.js":"8","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/RegForm.js":"9","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Payment.js":"10","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu.js":"11","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/PreviewForm.js":"12","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodCards.js":"13","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodItems.js":"14"},{"size":218,"mtime":1610916205053,"results":"15","hashOfConfig":"16"},{"size":1328,"mtime":1611252952716,"results":"17","hashOfConfig":"16"},{"size":1715,"mtime":1611387699005,"results":"18","hashOfConfig":"16"},{"size":1406,"mtime":1611344282551,"results":"19","hashOfConfig":"16"},{"size":591,"mtime":1610910843189,"results":"20","hashOfConfig":"16"},{"size":1195,"mtime":1611252952752,"results":"21","hashOfConfig":"16"},{"size":5052,"mtime":1611350831706,"results":"22","hashOfConfig":"16"},{"size":961,"mtime":1611252952716,"results":"23","hashOfConfig":"16"},{"size":18328,"mtime":1611385703006,"results":"24","hashOfConfig":"16"},{"size":1614,"mtime":1610459532460,"results":"25","hashOfConfig":"16"},{"size":5475,"mtime":1610915184817,"results":"26","hashOfConfig":"16"},{"size":906,"mtime":1611350265941,"results":"27","hashOfConfig":"16"},{"size":969,"mtime":1610907459737,"results":"28","hashOfConfig":"16"},{"size":947,"mtime":1610897961333,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"aod8j2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/index.js",[],["64","65"],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/App.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Routing.js",["66","67"],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Navbar.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/reducers/userDetailsReducer.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/SuccessPage.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/SignIn.js",["68","69"],"import {useState,useContext} from 'react';\nimport {Link,useHistory} from 'react-router-dom';\nimport {UserDetailsContext} from \"../App\"\nimport { toast } from 'react-toastify';\nimport \"./Signin.css\"\n//import 'react-toastify/dist/ReactToastify.css'\ntoast.configure();\n\nfunction SignIn(){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [load,setLoad] = useState(\"\");\n    const [rem,setRem] = useState(localStorage.getItem(\"rememberMe\") === null?false:JSON.parse(localStorage.getItem(\"rememberMe\")).bool);\n    const history = useHistory();\n    //destructure the state and dispatch function from context provider's value\n    const {state,dispatch} = useContext(UserDetailsContext);\n\n    function onChangeHandler(event) {\n        if(event.target.name === \"username\"){\n            setUsername(event.target.value);\n        }else if(event.target.name === 'password'){\n            setPassword(event.target.value);\n        }\n    }\n\n    //func to remeber me\n    function rememebrMeFunc(e){\n        setRem(e.target.checked);\n        console.log(e.target.checked);\n        localStorage.setItem(\"rememberMe\",JSON.stringify({bool:e.target.checked}))\n    }\n\n    function onClickHandler(event){\n        //prevent default action of reloading\n        event.preventDefault()\n        //debugger;\n        //make a post request to server sign in\n        /*const reqOptions = { \n            headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'}, \n            credentials: 'include',\n            method: 'POST', \n            body: JSON.stringify({\n            username,\n            password,\n            rememberMe : rem\n        })\n    }*/\n        const reqOptions = {\n            method:\"POST\",\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify({\n                username,\n                password\n            })\n        };\n        console.log(\"Trying to fetch...\")\n        //debugger;\n        fetch(\"/login\",reqOptions).then(res=>{return res.json()}).then((data)=>{\n            console.log(\"Made fetch req and recieved res\")\n            //debugger;\n            //loading\n            setLoad(<div className=\"progress\">\n                        <div className=\"indeterminate\"></div>\n                    </div>)\n            console.log(data);\n            if(data.success){\n                //make a toast with success massage\n                toast.success(data.message);\n\n                //store token and user info present in response in local storage\n                localStorage.setItem(\"jwt\",data.token);\n                console.log(data.user);\n                localStorage.setItem(\"user\",JSON.stringify(data.user));\n                console.log(\"Successfull login.....\")\n\n                //only dispatch is allowed to change state by dispatching action\n                //store user data in redux state\n                dispatch({type:\"SET_USER_DETAILS\",payload:data.user})\n                \n                //navigate user to menu\n                setTimeout(()=>{\n                    history.push('/menu');\n                },1000)\n            }else{\n                setLoad(null);\n                //make toast with failure message\n                toast.error(data.message);\n                console.log(data.error + \" : \" + data.message);\n            }\n        });\n    }\n\n    return(\n        <div className=\"container-login\">\n            {load}\n            <div className=\"loginWrapper\">\n                <div className='form-content-left'>\n                    <img className='form-img' src='/cafeLogo.jpg'/>\n                </div>\n                <div className=\"form-content-right\">\n                    <form>\n                        <h1 className=\"login\">Login</h1>\n                        <div className=\"input-field\">\n                            <input type=\"text\" value ={username} onChange={(event)=>{onChangeHandler(event)}} name=\"username\" placeholder=\"Employee ID\"/>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"password\" value={password} onChange={(event)=>{onChangeHandler(event)}} name=\"password\" placeholder=\"Password\"/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"submit\" onClick={(event)=>onClickHandler(event)}>SignIn</button>\n                        </div>\n                        <br/>\n                        \n                        <span className=\"remember\">Remember Me</span> <br/>\n                        <input className=\"flipswitch\" type=\"checkbox\" checked={rem} onChange={(e)=>rememebrMeFunc(e)}/>\n                        <br/> <br/>\n                        <Link className=\"already\" to=\"/signup\">Dont have an account?</Link>\n                       \n                    </form>\n                </div>\n            </div>\n        </div> \n    )\n}\n\nexport default SignIn;\n\n\n/*\n,'Authorization': `Bearer ${localStorage.getItem(\"jwt\")}`\n*/\n\n/*\n1610385286469\n1235\n*/","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Profile.js",["70"],"import {useContext} from 'react';\nimport { UserDetailsContext } from '../App';\nimport '../App.css';\n\nfunction Profile(){\n    const {state,dispatch} = useContext(UserDetailsContext);\n    \n    return(\n        <div className = \"container\">\n            <div className=\"card\" id=\"profile-card\">\n                <div className = \"card-header\" id=\"profile-header\">\n                    <img src = {state.imgURL} alt=\"profile pic\" ></img>\n                </div>\n                <div className=\"card-content\" id=\"profile-content\">\n                    <h3>Welcome {state.name}!</h3>\n                    <h4>{state.orgName}</h4>\n                    <h4>Registration Date : {state.regDate}</h4>\n                    <h4>{state.empID}</h4>\n                    <h4>Registration ID : {state.regID}</h4>\n                    <h4>{state.email}</h4>\n                    <h4>{state.mobNo}</h4>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/RegForm.js",["71","72","73","74","75","76","77","78"],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Payment.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu.js",["79"],"import {useState,useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport FoodCards from \"./FoodCards/FoodCards\";\n\n\n//add quantity feature\nfunction Menu(){\n    const history = useHistory();\n    const [order,setOrder] = useState([]);\n\n    function onChangeHandler(event){\n        let temp = order.map((item)=>{\n            return item\n        });\n        temp.push(event.target.value);\n        setOrder(temp);\n    }\n\n    function placeOrder(){\n        let fd = {name:null,price:null};\n        for(let i = 0;i<order.length;i++){\n            let temp = order[i].split(\"&\");\n            fd.name = temp[0];\n            fd.price = temp[1];\n        }\n        console.log(fd);\n        //post data to server\n        fetch('/book',{\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\")\n            },body:JSON.stringify(fd)\n        }).then(res=>res.json()).then((data)=>{\n            if(data.success){\n                //redirect to the payment page\n                history.push('/payment')\n            }\n            else{\n                //make toast\n            }\n        })\n    }\n\n    const [menu,setMenu] = useState([]);\n\n    //get the menu from server\n    useEffect(()=>{\n        console.log(\"Called once\");\n        fetch(\"/menu\").then(res=>res.json()).then((items)=>{\n            let temp = [];\n            console.log(\"Items:::::\");\n            console.log(items);\n            for(let i = 0; i < items.menu.length; i++){                \n                for(let j = 0; j < items.menu[i].items.length; j++) items.menu[i].items[j].quantity = 0;\n                temp.push(items.menu[i]);\n            }\n            setMenu(temp);\n        })\n    },[])\n\n    const addItem = (product)=>{\n        //console.log(\"Added Item: \"+product.text);\n        //console.log(order)\n        const category = menu.findIndex(p => p.category === product.category);\n        if(category >= 0){\n            const item = menu[category].items.findIndex(p => p.name === product.text);\n            if(item >= 0){\n                menu[category].items[item].quantity += 1;\n                setMenu(menu);\n                const cartIndex = order.findIndex(p => p.name === product.text);\n                if(cartIndex >= 0){\n                    const cart = order.slice();\n                    const existingProduct = cart[cartIndex];\n                    const updatedProduct = {...existingProduct, quantity: existingProduct.quantity + 1};\n                    cart[cartIndex] = updatedProduct\n                    setOrder(cart)\n                }\n                else{\n                    const newItem = menu[category].items[item];\n                    newItem.quantity = 1;\n                    setOrder([...order, newItem])\n                }\n            }\n            else{\n                console.log(\"Invalid Product\"); // A product which is not in the menu has been passed (possibly by manually editing the webpage)\n            }\n        }\n        else{\n            console.log(\"Invalid Product\"); // A product which is not in the menu has been passed (possibly by manually editing the webpage)\n        }\n    }\n\n    const removeItem = (product)=>{\n        const category = menu.findIndex(p => p.category === product.category);\n        if(category >= 0){\n            const item = menu[category].items.findIndex(p => p.name === product.text);\n            if(item >= 0){\n                if(menu[category].items[item].quantity){\n                    menu[category].items[item].quantity -= 1;\n                    setMenu(menu);\n                    const cartIndex = order.findIndex(p => p.name === product.text);\n                    if(cartIndex >= 0){\n                        const cart = order.slice();\n                        const existingProduct = cart[cartIndex];\n                        const updatedProduct = {...existingProduct, quantity: existingProduct.quantity - 1};\n                        cart[cartIndex] = updatedProduct\n                        setOrder(cart)\n                    }\n                } \n            }\n            else{\n                console.log(\"Invalid Product\"); // A product which is not in the menu has been passed (possibly by manually editing the webpage)\n            }\n        }\n        else{\n            console.log(\"Invalid Product\"); // A product which is not in the menu has been passed (possibly by manually editing the webpage)\n        }\n    }\n    //change to checkbox from select/option\n    //refer to this for UI: https://www.youtube.com/watch?v=oy9TEteCXdU&ab_channel=TheNetNinja\n    return(\n        <div>\n            <h2 className=\"menu-heading\">Today's Menu</h2>\n            \n                {menu.length === 0?\n                    <div className=\"progress\">\n                        <div className=\"indeterminate\"></div>\n                    </div>:\n                    <div className=\"menu\">\n                        {menu.map((category,id)=>{return <FoodCards key={id} menu={category} addItem={addItem} removeItem={removeItem}/>})}\n                    </div>\n                }\n                {\n                localStorage.getItem(\"jwt\")===null?\n                    <div className=\"waves-effect waves-light btn\" onClick={history.push('signin')}>SignIn To Order</div>:\n                    <div className=\"waves-effect waves-light btn\" onClick={placeOrder}>Order Now!</div>}\n            \n        </div>\n    )\n}\n\nexport default Menu;","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/PreviewForm.js",[],"/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodCards.js",["80"],"import React, {useContext} from 'react';\nimport './FoodCards.css';\nimport FoodItem from './FoodItems';\n\n\nfunction FoodCards(props) {\n  const map = props.menu.items.map((item,id)=>{\n                return [\n                    <FoodItem\n                      key = {id}\n                      src='/food.jpg'\n                      text={item.name}\n                      description = {item.description}\n                      label='Not spicy'\n                      addItem={props.addItem}\n                      removeItem={props.removeItem}\n                      price={item.price}\n                      count={item.quantity}\n                      category={props.menu.category}\n                    />\n                ]\n          });\n  return (\n    <div className='foodMenu'>      \n      <h3 className=\"menu-category\">{props.menu.category}</h3>\n      <div >      \n          <ul className='foodContainer'>{map}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default FoodCards;","/home/dhruval/Desktop/Projects/Hackathons/HakerRank/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodItems.js",["81"],"import React from 'react';\n\nfunction FoodItem(props) {\n  return (\n    \n      <li className='foodItem'>\n        <div className='foodItemContainer'>\n          <figure className='games__item__pic-wrap' price={\"₹\"+props.price}>\n            <img\n              className='games__item__img'\n              src={props.src}\n            />\n          </figure>\n          <div className='games__item__info'>\n            <h5 className='games__item__text'>{props.text}</h5>\n            <div>\n            <button onClick={(event) => {\n              event.preventDefault();\n              props.removeItem(props);\n              }}>-</button>\n            &nbsp;{props.count}&nbsp;\n            <button onClick={(event) => {\n              event.preventDefault();\n              props.addItem(props);\n              }}>+</button>\n            </div>\n            <p>{props.description}</p>\n          </div>\n        </div>\n      </li>\n    \n  );\n}\n\nexport default FoodItem;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":14,"column":12,"nodeType":"88","messageId":"89","endLine":14,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":38,"column":8,"nodeType":"92","endLine":38,"endColumn":10,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"87","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":98,"column":21,"nodeType":"96","endLine":98,"endColumn":68},{"ruleId":"86","severity":1,"message":"97","line":6,"column":18,"nodeType":"88","messageId":"89","endLine":6,"endColumn":26},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"99","line":34,"column":12,"nodeType":"88","messageId":"89","endLine":34,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":42,"column":12,"nodeType":"88","messageId":"89","endLine":42,"endColumn":17},{"ruleId":"90","severity":1,"message":"100","line":156,"column":7,"nodeType":"92","endLine":156,"endColumn":13,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":401,"column":80,"nodeType":"104","endLine":401,"endColumn":95},{"ruleId":"102","severity":1,"message":"103","line":404,"column":80,"nodeType":"104","endLine":404,"endColumn":95},{"ruleId":"102","severity":1,"message":"103","line":408,"column":52,"nodeType":"104","endLine":408,"endColumn":70},{"ruleId":"102","severity":1,"message":"103","line":410,"column":48,"nodeType":"104","endLine":410,"endColumn":66},{"ruleId":"86","severity":1,"message":"105","line":11,"column":14,"nodeType":"88","messageId":"89","endLine":11,"endColumn":29},{"ruleId":"86","severity":1,"message":"106","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":9,"column":13,"nodeType":"96","endLine":12,"endColumn":15},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","'useReducer' is defined but never used.","'errMsgs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cloudinaryUploadPromise', 'dispatch', 'email', 'empID', 'formErrors', 'history', 'mobNo', 'name', 'orgName', 'password', and 'valid'. Either include them or remove the dependency array.",["110"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'onChangeHandler' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, history]",{"range":"115","text":"116"},"Update the dependencies array to be: [cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]",{"range":"117","text":"118"},[1268,1270],"[dispatch, history]",[7313,7319],"[cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]"]